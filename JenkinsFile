pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                // Use Maven to build your project
                //sh 'mvn clean package'
                echo "Trying"
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Use your testing framework to run unit tests
                //sh 'npm test'  // Replace with your actual unit test command
                echo "Trying"
                // Run integration tests
                //sh 'npm run integration-test'  // Replace with your actual integration test command
            }
        }
        stage('Code Analysis') {
            steps {
                // Use SonarQube scanner to analyze your code
                //sh 'sonar-scanner'
                echo "Trying"
            }
        }
        stage('Security Scan') {
            steps {
                // Use a security scanning tool to identify vulnerabilities
                echo "Trying"
                //sh 'npm audit'  // Replace with your actual security scan command
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Use AWS CLI or other deployment tool to deploy to staging
                //sh 'aws deploy staging'  // Replace with your deployment command
                echo "Trying"
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment
               //sh 'npm run staging-integration-test'  // Replace with your actual staging integration test command
                echo "Trying"
            }
        }
        stage('Deploy to Production') {
            steps {
                // Use AWS CLI or other deployment tool to deploy to production
                //sh 'aws deploy production'  // Replace with your deployment command
                echo "Trying"
            }
        }
    }
    post {
        success {
            emailext (
                subject: "Build Successful: ${currentBuild.fullDisplayName}",
                body: "The build was successful.",
                to: 'harshitbal80@gmail.com'
            )
        }
        failure {
            emailext (
                subject: "Build Failed: ${currentBuild.fullDisplayName}",
                body: "The build has failed. Please check the logs for details.",
                to: 'harshitbal80@gmail.com'
            )
        }
    }
}
